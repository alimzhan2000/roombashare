#-*-coding: utf-8-*-

import telebot
import time
import urllib
from telebot import types
from database import SQL
from users import Seeker
import photos

token = "1012075393:AAFXyQtFOdrH7mPxeV2QmSX2otYfrEi-aRA" #testbot
bot = telebot.TeleBot(token)
db = SQL()
allvars = {}

class Settings:
	def __init__(self):
		self.mode = 0
		self.cur_profile = 0
		self.change_st = 0
		self.last_mess_id = 0
		self.seeker = Seeker()
		self.profiles = ""
		self.seeker_st = False
		self.seeker_search_st = False
		self.search_profile = False
		self.feedback_st = False		
def add_new_user(chat_id):
	global allvars
	if chat_id in allvars.keys():
		return 
	a = Settings()
	allvars[chat_id] = a
def default_vars(chat_id):
	global allvars
	allvars[chat_id] = Settings()

@bot.message_handler(commands = ['start'])
def start(message):
	add_new_user(message.chat.id)
	default_vars(message.chat.id)
	keyboard = types.ReplyKeyboardMarkup(True, False)
	keyboard.row('–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ\n –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫', '–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫')
	keyboard.row('–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å')
	bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Çüëã \n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç Roomba - –±–æ—Ç –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Ç–µ–±–µ –∏–¥–µ–∞–ª—å–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∞—Ä–µ–Ω–¥—ã –∂–∏–ª—å—èüè†, –∞ —Ç–∞–∫–∂–µ –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π –¥–ª—è –ø–æ–¥—Å–µ–ª–µ–Ω–∏—èüë™\n\n –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã –≤—ã–±–µ—Ä–∏ —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å: \n‚ñ∂ –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ \n‚ñ∂ –°–æ–≤–µ—Ä—à–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ \n‚ñ∂ –ò–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, \n‚ñ∂ –û—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ —Å—Ç–∞—Ç—å –ª—É—á—à–µ', reply_markup=keyboard)

@bot.message_handler(commands = ['menu'])
def main_menu(message):
	default_vars(message.chat.id)
	keyboard = types.ReplyKeyboardMarkup(True, False)
	keyboard.row('–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ\n –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫', '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è')
	keyboard.row('–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å')
	bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=keyboard)

def profile_info(profile):
	if profile[20] == True:
		text = '*–ò—â–µ—Ç –ª—é–¥–µ–π –¥–ª—è –ø–æ–¥—Å–µ–ª–µ–Ω–∏—è –≤ —Å–≤–æ—é –∫–≤–∞—Ä—Ç–∏—Ä—É*\n*–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã:* ' + profile[9] + ' —Ä–∞–π–æ–Ω\n\n'
	else:
		text = ''
	if profile[2] > 1000:
		age = str(int(profile[2]/100)) + '-' + str(profile[2]%100)
	else:
		age = str(profile[2])
	age += ' –ª–µ—Ç'
	if profile[5] == 'student':
		work = '*–°—Ç—É–¥–µ–Ω—Ç.* –£—á–∏—Ç—Å—è –≤ '
	else:
		work = '*–†–∞–±–æ—Ç–Ω–∏–∫.* –†–∞–±–æ—Ç–∞–µ—Ç –≤ —Å—Ñ–µ—Ä–µ '
	place = ""
	if profile[8] == '–ö–∞–∑–∞—Ö—Å–∫–∏–π':
		place = '–ì–æ–≤–æ—Ä–∏—Ç –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–æ–º'
	elif profile[8] == '–†—É—Å—Å–∫–∏–π':
		place = '–ì–æ–≤–æ—Ä–∏—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º'
	else:
		place = '–ì–æ–≤–æ—Ä–∏—Ç –∏ –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–æ–º, –∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º'
	text += '*–ò–º—è:* '+ profile[1] + '\n' + '*–í–æ–∑—Ä–∞—Å—Ç:* ' + str(age) + '\n' + \
			'*–†–æ–¥–æ–º —Å* '+ profile[3] + '\n' + '*–ü–æ–ª:* ' + profile[4] + '\n' + work + \
			profile[6] + '\n' + '*–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:* '+ profile[7] + '\n' + place + '\n' + \
			'*–í—Ä–µ–¥–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏: *' + profile[18] + '\n' + '*–û —Å–µ–±–µ:* ' + profile[13]
	if profile[19] is not None:
		text += '\n@'+profile[19]
	return text

@bot.message_handler(func=lambda message:message.text is not None and len(message.text) > 6 and message.text[:7] == '/advert')
def adverts(message):
	if message.text[7] == '1':
		profile_id = message.text[8:]
		profile = db.get_profile_by_id(profile_id)
		cap = profile_info(profile)
		photo_id = db.get_profile_photo(profile[0])
		keyboard = types.InlineKeyboardMarkup()
		button = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', callback_data = 'change_profile')
		keyboard.add(button)
		button = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', callback_data = 'delete_profile')
		keyboard.add(button)
		if photo_id == '0':
			bot.send_message(message.chat.id, cap, reply_markup = keyboard, parse_mode = 'Markdown')
		else: 
			photo = photos.download_photo(photo_id)
			bot.send_photo(message.chat.id, photo, caption = cap, reply_markup=keyboard, parse_mode = 'Markdown')
	elif message.text[7] == '2':
		flat_id = message.text[8:]
		flat = db.get_flat_by_id(flat_id)
		keyboard = types.InlineKeyboardMarkup()
		cap = '*–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã:* '+ flat[1] + ' —Ä–∞–π–æ–Ω, ' + flat[2] + '\n' + \
		 '*–¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã:* '+ str(flat[3]) + '\n' + '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:* ' + str(flat[4]) + '\n' + \
		 '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª—å–Ω—ã—Ö –º–µ—Å—Ç:* ' + str(flat[5]) + '\n' + '*–°—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã –Ω–∞ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞:*' + str(flat[6]) + \
		 '\n' + '*–û–ø–∏—Å–∞–Ω–∏–µ:* '+ flat[7] + '\n' + '*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* ' + flat[8]
		photo_id = db.get_flat_photo_file_id(flat[0])
		if photo_id == '0':
			bot.send_message(message.chat.id, cap, parse_mode = 'Markdown')
		else: 
			photo = photos.download_photo(photo_id)
			bot.send_photo(message.chat.id, photo, caption = cap, parse_mode = 'Markdown')

@bot.message_handler(func=lambda message:message.text is not None and len(message.text) > 6 and message.text[:7] == '/delete')
def delete_ads(message):
	if message.text[7] == '2':
		flat_id = message.text[8:]
		db.offerer_delete(flat_id)
		bot.send_message(message.chat.id, '–¢–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ. –ù–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ!')

@bot.callback_query_handler(func=lambda call:True)
def callback(call):
	global allvars
	add_new_user(call.message.chat.id)
	u = allvars[call.message.chat.id]
	if call.message:
		if call.data == 'profile_next' or call.data == 'profile_prev' or call.data == 'rematch_profiles':
			bot.delete_message(call.message.chat.id, call.message.message_id)
			if call.data == 'rematch_profiles':
				profile = db.get_profile(call.message.chat.id)
				seeker = Seeker(profile)
				u.profiles = db.get_profiles_by_filters(seeker)
			if call.data == 'profile_prev':
				u.cur_profile -= 2
			if u.profiles is None or u.cur_profile >= len(u.profiles) or u.cur_profile < 0:
				bot.send_message(call.message.chat.id, '–£–ø—Å. –ü–æ—Ö–æ–∂–µ —Ç—ã —É –Ω–∞—Å –ø–µ—Ä–≤—ã–π –∫–ª–∏–µ–Ω—ÇüôÄ!–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è')
				return
			profile = u.profiles[u.cur_profile]
			u.cur_profile += 1
			keyboard = types.InlineKeyboardMarkup()
			if u.cur_profile + 1 <= len(u.profiles) and u.cur_profile > 1:
				button1 = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∏–π >>', callback_data = 'profile_next')
				button2 = types.InlineKeyboardButton('<< –ü—Ä–µ–¥—ã–¥—É—â–∏–π', callback_data = 'profile_prev')
				keyboard.row(button2, button1)
			elif u.cur_profile > 1:
				button = types.InlineKeyboardButton('<< –ü—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data = 'profile_prev')
				keyboard.add(button)
			elif u.cur_profile + 1 <= len(u.profiles):
				button = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å >>', callback_data = 'profile_next')
				keyboard.add(button)
			cap = profile_info(profile)
			photo_id = db.get_profile_photo(profile[0])
			if photo_id == '0':
				bot.send_message(call.message.chat.id, cap, reply_markup = keyboard, parse_mode = 'Markdown')
			else: 
				photo = photos.download_photo(photo_id)
				bot.send_photo(call.message.chat.id, photo, caption = cap, reply_markup = keyboard, parse_mode = 'Markdown')
		elif call.data == 'delete_profile':
			db.seeker_delete(str(call.message.chat.id))
			bot.delete_message(call.message.chat.id, call.message.message_id)
			bot.send_message(call.message.chat.id, '*–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ.*', parse_mode = 'Markdown')
		elif call.data == 'change_profile':
			keyboard = types.InlineKeyboardMarkup()
			button1 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è', callback_data = 'change_name')
			button2 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –í–æ–∑—Ä–∞—Å—Ç', callback_data = 'change_age')
			button3 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å \n–û—Ç–∫—É–¥–∞ –†–æ–¥–æ–º', callback_data = 'change_homeland')
			button4 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –û —Å–µ–±–µ', callback_data = 'change_desc')
			button5 = types.InlineKeyboardButton('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='')
			keyboard.row(button1, button2)
			keyboard.row(button3, button4)
			keyboard.row(button5)
			bot.edit_message_reply_markup(chat_id = call.message.chat.id, message_id = call.message.message_id, reply_markup = keyboard)
		elif call.data == 'change_name':
			bot.send_message(call.message.chat.id, '–•–º–º. –ù–∞–¥–µ—é—Å—å —Ç—ã –≤ —Ä–æ–∑—ã—Å–∫ –Ω–µ –ø–æ–ø–∞–ª) –í–≤–µ–¥–∏ —Å–≤–æ–µ –Ω–æ–≤–æ–µ –∏–º—è')
			u.change_st = 1
			u.last_mess_id = call.message.message_id
		elif call.data == 'change_age':
			bot.send_message(call.message.chat.id, '–£ –∫–æ–≥–æ-—Ç–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ? –í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç\n(—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)')
			u.change_st = 2
			u.last_mess_id = call.message.message_id
		elif call.data == 'change_homeland':
			bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å–≤–æ–µ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ –æ—Ç–∫—É–¥–∞ —Ç—ã —Ä–æ–¥–æ–º\n(—Ä–µ–≥–∏–æ–Ω, –≥–æ—Ä–æ–¥)')
			u.change_st = 3
			u.last_mess_id = call.message.message_id
		elif call.data == 'change_desc':
			bot.send_message(call.message.chat.id, '–ü–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã? –ë—É–¥—É —Ä–∞–¥ –æ –Ω–∏—Ö —É—Å–ª—ã—à–∞—Ç—å')
			u.change_st = 4
			u.last_mess_id = call.message.message_id

@bot.message_handler(content_types = ['text'])
def name_insert_data(message):
	global allvars
	add_new_user(message.chat.id)
	u = allvars[message.chat.id]
	if message.text == '–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ\n –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫':
		chat_id = str(message.chat.id)
		if db.seeker_check_chat_id(chat_id) == True:
			keyboard = types.InlineKeyboardMarkup()
			button = types.InlineKeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏ –ª—é–¥–µ–π', callback_data = 'rematch_profiles')
			keyboard.add(button)
			bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç –º–æ–π —Å—Ç–∞—Ä—ã–π –¥—Ä—É–≥! –¢–∞–∫ –∫–∞–∫ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –º–æ–∂–µ—à—å —Å—Ä–∞–∑—É –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏. '
			'–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –ø–µ—Ä–µ—Ö–æ–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª *\'–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è\'*'
			' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é (/menu).', reply_markup = keyboard, parse_mode = 'Markdown')
			return
		keyboard = types.ReplyKeyboardMarkup(True, False)
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–•—ç—ç–πüôå –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –Ω–∞—à–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –∏ –∑–∞–æ–¥–Ω–æ –∑–∞–ø–æ–ª–Ω–∏–º —Ç–µ–±–µ –∞–Ω–∫–µ—Ç—É', reply_markup=keyboard)
		time.sleep(1)
		bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Å–∫–∞–∂–∏ —Å–≤–æ–µ –∏–º—è')
		u.seeker_search_st = True
		u.mode = 1
	elif message.text == 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
		default_vars(message.chat.id)
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.row('–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ\n –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫', '–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫')
		keyboard.row('–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å')
		bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=keyboard)
	elif message.text == '–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫':
		u.search_profile = True
		u.mode = 1
		u.seeker = Seeker()
		bot.send_message(message.chat.id, '–î–ª—è –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —É–∫–∞–∑–∞–∂–∏ —Ä–∞–π–æ–Ω –≥–æ—Ä–æ–¥–∞ –∏ –∂–µ–ª–∞–µ–º—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã')
		time.sleep(1)
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.row('–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π', '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π')
		keyboard.row('–ï—Å–∏–ª—å—Å–∫–∏–π', '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏ –∂–µ–ª–∞–µ–º—ã–π —Ä–∞–π–æ–Ω', reply_markup = keyboard)
	elif message.text == '–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è':
		profile = db.get_profile(message.chat.id)
		if profile is None:
			bot.send_message(message.chat.id, '–£ —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π')
			return
		text = '*–¢–≤–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è*\n\n'
		if profile is not None:
			text += '*–ü–æ–∏—Å–∫ –∫–≤–∞—Ä—Ç–∏—Ä—ã*\n'
			text += 'üìÑ–ü–æ–¥—Ä–æ–±–Ω–µ–µ: /advert1' + str(profile[0]) + '\n\n'
		bot.send_message(message.chat.id, text, parse_mode = 'Markdown')
	elif message.text == '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å' or u.feedback_st == True:
		if u.feedback_st == False:
			u.feedback_st = True
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–û—Å—Ç–∞–≤—å —Å–≤–æ–π –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–∏–≤ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!', reply_markup=keyboard)
		else:
			bot.send_message(259442131, str(message.text) + '\n–æ—Ç ' + str(message.from_user.last_name) + ' ' + str(message.from_user.first_name) + ' @' + str(message.from_user.username))
			default_vars(259442131)
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ\n –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫', '–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫')
			keyboard.row('–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å')
			bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤!', reply_markup=keyboard)
	elif u.seeker_st == True or u.seeker_search_st == True:	
		if u.mode == 1:
			u.seeker.chat_id = message.chat.id
			u.seeker.name = message.text
			u.mode = 2
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è :) –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç(–∏–∑–≤–∏–Ω–∏ –µ—Å–ª–∏ –≥—Ä—É–±–æ - —ç—Ç–æ –Ω—É–∂–Ω–æ)', reply_markup = keyboard)
		elif u.mode == 2:
			age = message.text
			if not age.isdigit() or int(age) > 110 or int(age) < 14:
				bot.send_message(message.chat.id, '–í–≤–æ–¥–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
				return
			u.seeker.age = int(age)
			u.mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–¢–∞–∫, —Å –≤–æ–∑—Ä–∞—Å—Ç–æ–º –∑–∞–∫–æ–Ω—á–∏–ª–∏. –ö—Å—Ç–∞—Ç–∏, —Ö–æ—Ç–µ–ª —É —Ç–µ–±—è –µ—â–µ —É–∑–Ω–∞—Ç—å, —Å –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Ä–µ–≥–∏–æ–Ω–∞ –ø—Ä–∏–µ—Ö–∞–ª/–∞?', reply_markup=keyboard)
		elif u.mode == 3:
			u.seeker.homeland = message.text
			u.mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('–ú—É–∂c–∫–æ–π', '–ñ–µ–Ω—Å–∫–∏–π')
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–í–∞—É, —è —Ç–æ–∂–µ –æ—Ç—Ç—É–¥–∞! –ú—ã —Å —Ç–æ–±–æ–π –∑–µ–º–ª—è–∫–∏üòè –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª', reply_markup = keyboard)
		elif u.mode == 4:
			if message.text == '–ú—É–∂—Å–∫–æ–π':
				u.seeker.gender = '–ú—É–∂—Å–∫–æ–π'
			elif message.text == '–ñ–µ–Ω—Å–∫–∏–π':
				u.seeker.gender = '–ñ–µ–Ω—Å–∫–∏–π'
			else:
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('–ú—É–∂—Å–∫–æ–π', '–ñ–µ–Ω—Å–∫–∏–π')
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–£–ø—Å, —á—Ç–æ-—Ç–æ –Ω–µ –≤—ã—à–ª–æ. –í—ã–±–µ—Ä–∏ –µ—â–µ —Ä–∞–∑. –¢–æ–ª—å–∫–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–æ—á–∫–∞–º–∏ –≤–Ω–∏–∑—É ("–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π")', reply_markup = keyboard)
				return
			u.mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('–£—á—É—Å—å', '–†–∞–±–æ—Ç–∞—é', '–ù–µ —É—á—É—Å—å –∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é')
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–•–æ—Ç–µ–ª —É —Ç–µ–±—è –µ—â–µ —Å–ø—Ä–æ—Å–∏—Ç—å —Ç–≤–æ–π –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–æ–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –¢—ã –ø–æ–∫–∞ —É—á–∏—à—å—Å—è –∏–ª–∏ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—à—å? \n–ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –ø–æ–∏—Å–∫–µ —Å–∞–º–æ–≥–æ —Å–µ–±—è - —ç—Ç–æ —Ç–æ–∂–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ú–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–¥–Ω—É –∏–∑ —Ç—Ä–µ—Ö:', reply_markup = keyboard)
		elif u.mode == 5:
			keyboard = types.ReplyKeyboardMarkup(True, True)
			if message.text == '–£—á—É—Å—å':
				u.seeker.worker_or_student = 'student'
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				keyboard.row('Astana IT University', '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç "–ê—Å—Ç–∞–Ω–∞"')
				keyboard.row('–ö–ê–ó–ê–¢–£ –∏–º. –°–µ–π—Ñ—É–ª–ª–∏–Ω–∞', '–ù–∞–∑–∞—Ä–±–∞–µ–≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç')
				keyboard.row('–ï–≤—Ä–∞–∑–∏–π—Å–∫–∏–π –ù–£', '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ö–ê–ó–ì–Æ–£')
				keyboard.row('–ú–µ–¥–∏—Ü–∏–Ω–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ê—Å—Ç–∞–Ω—ã', '–§–∏–ª–∏–∞–ª –ú–ì–£ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ')
				keyboard.row('–î—Ä—É–≥–æ–µ...')
				bot.send_message(message.chat.id, '–£—Ö —Ç—ã. –õ—é–±–ª—é –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö –ª—é–¥–µ–πüéì –í –∫–∞–∫–æ–º –∑–∞–≤–µ–¥–Ω–∏–∏ —Ç—ã —É—á–∏—à—å—Å—è?', reply_markup=keyboard)
			elif message.text == '–†–∞–±–æ—Ç–∞—é':
				u.seeker.worker_or_student = 'worker'
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				keyboard.row('–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', '–¢–æ—Ä–≥–æ–≤–ª—è')
				keyboard.row('IT', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ')
				keyboard.row('–ì–æ—Å—Å–ª—É–∂–±–∞', '–§–∏–Ω–∞–Ω—Å—ã')
				keyboard.row('–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å', '–£—Å–ª—É–≥–∏')
				keyboard.row('–î—Ä—É–≥–æ–µ...')
				bot.send_message(message.chat.id, '–£—Ö —Ç—ã. –õ—é–±–ª—é –¥–µ–ª–æ–≤—ã—Ö –ª—é–¥–µ–π! –í –∫–∞–∫–æ–π —Å—Ñ–µ—Ä–µ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å?', reply_markup=keyboard)
			elif message.text == '–ù–µ —É—á—É—Å—å –∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é':
				u.seeker.worker_or_student = 'neither'
				u.mode += 2
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–û–±–∞ —è–∑—ã–∫–∞')
				keyboard.row('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–ù–∞ –∫–∞–∫–∏—Ö —è–∑—ã–∫–∞—Ö —Ç—ã —É–º–µ–µ—à—å –≥–æ–≤–æ—Ä–∏—Ç—å?', reply_markup=keyboard)
			else:
				bot.send_message(message.chat.id, '–•—ç—ç–π! –í–≤–æ–¥–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã. –Ø –ø—Ä–æ—Å—Ç–æ –ø–æ-–¥—Ä—É–≥–æ–º—É –Ω–µ –ø–æ–Ω–∏–º–∞—éüòì')
				return
			u.mode += 1
		elif u.mode == 6:
			status = u.seeker.worker_or_student
			if message.text == '–î—Ä—É–≥–æ–µ...':
				if status == 'student':
					bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –º–µ—Å—Ç–∞ –æ–±—É—á–µ–Ω–∏—è')
				elif status == 'worker':
					bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ —Å—Ñ–µ—Ä—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å')
			else:
				u.seeker.study_or_work_place = message.text
				u.mode += 1
				keyboard = types.ReplyKeyboardMarkup(True, True)
				if status == 'student':
					keyboard.row('–° —É—Ç—Ä–∞ –¥–æ –≤–µ—á–µ—Ä–∞')
					keyboard.row('–° –æ–±–µ–¥–∞ –¥–æ –≤–µ—á–µ—Ä–∞','–° —É—Ç—Ä–∞ –¥–æ –æ–±–µ–¥–∞')
					keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
					bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É —Ç–µ–±—è —Ä–µ–∂–∏–º —É—á–µ–±—ã –∏–ª–∏ —Ä–∞–±–æ—Ç—ã? –í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Ç—ã –∑–∞–Ω—è—Ç/–∞?', reply_markup=keyboard)
				elif status == 'worker':
					keyboard.row('–° —É—Ç—Ä–∞ –¥–æ –≤–µ—á–µ—Ä–∞', '–° —É—Ç—Ä–∞ –¥–æ –æ–±–µ–¥–∞')
					keyboard.row('–ù–æ—á—å—é', '–í–∞—Ö—Ç–æ–≤—ã–µ —Å–º–µ–Ω—ã')
					keyboard.row('–ß–µ—Ä–µ–∑ –¥–µ–Ω—å/–¥–≤–∞', 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
					bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –º–Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –≤ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å, —á—Ç–æ–±—ã –∏ —Ç–µ–±–µ –∏ —Å–æ—Å–µ–¥—è–º –±—ã–ª–æ —É–¥–æ–±–Ω–µ–µ –≤—Å–µ–≥–æ –∂–∏—Ç—å –≤–º–µ—Å—Ç–µ', reply_markup=keyboard)
		elif u.mode == 7:
			u.seeker.sleeping_mode = message.text
			u.mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–û–±–∞ —è–∑—ã–∫–∞')
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–¢–∞–∫, –ø–æ–ª–æ–≤–∏–Ω—É –ø—É—Ç–∏ –º—ã —Å —Ç–æ–±–æ–π —É–∂–µ –ø—Ä–æ—à–ª–∏. –û—Å—Ç–∞–ª–æ—Å—å –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ. \n –£–∫–∞–∂–∏ —è–∑—ã–∫–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —É–º–µ–µ—à—å –≥–æ–≤–æ—Ä–∏—Ç—å:', reply_markup=keyboard)
		elif u.mode == 8:
			lang = message.text
			if lang == '–ö–∞–∑–∞—Ö—Å–∫–∏–π' or lang == '–†—É—Å—Å–∫–∏–π' or lang == '–û–±–∞ —è–∑—ã–∫–∞': 
				u.seeker.langs = message.text
				u.mode += 1
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('–ö—É—Ä—é/–ù–µ –ø—å—é', '–ù–µ –∫—É—Ä—é/–ü—å—é')
				keyboard.row('–ù–µ –∫—É—Ä—é/–ù–µ –ø—å—é', '–ö—É—Ä—é/–ü—å—é')
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–ù–∞–¥–µ—é—Å—å —É —Ç–µ–±—è –∏—Ö –Ω–µ—Ç, –Ω–æ –≤—Å–µ –∂–µ –º–Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ —Ç–≤–æ–∏—Ö –≤—Ä–µ–¥–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–∫–∞—Öüö¨', reply_markup=keyboard)
			else:
				bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–∞–π –∫–Ω–æ–ø–æ—á–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞) –Ø –ø–æ-–¥—Ä—É–≥–æ–º—É –Ω–µ –ø–æ–Ω–∏–º–∞—éüòì')
				return
		elif u.mode == 9:
			u.seeker.bad_habits = message.text
			u.mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('–õ—é–¥–µ–π', '–ñ–∏–ª—å–µ')
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–°–∞–º—ã–π –≥–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –¢—ã –∏—â–µ—â—å –ª—é–¥–µ–π –∫ —Å–µ–±–µ –Ω–∞ –ø–æ–¥—Å–µ–ª–µ–Ω–∏–µ –∏–ª–∏ –∏—â–µ—à—å –∂–∏–ª—å–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∞—Ä–µ–Ω–¥—ã?', reply_markup=keyboard)
		elif u.mode == 10:
			if message.text == '–õ—é–¥–µ–π':
				u.seeker.hata = True
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π', '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π')
				keyboard.row('–ï—Å–∏–ª—å—Å–∫–∏–π', '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π')
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º —Ä–∞–π–æ–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–≤–æ—è –∫–≤–∞—Ä—Ç–∏—Ä–∞/–¥–æ–ºüè°?', reply_markup = keyboard)
			elif message.text == '–ñ–∏–ª—å–µ':
				u.seeker.hata = False
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π', '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π')
				keyboard.row('–ï—Å–∏–ª—å—Å–∫–∏–π', '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π')
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–£–∫–∞–∂–∏ –∂–µ–ª–∞–µ–º—ã–π —Ä–∞–π–æ–Ω –≥–æ—Ä–æ–¥–∞', reply_markup = keyboard)
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥.\n(–î–∞/–ù–µ—Ç)')
				return
			u.mode += 1
		elif u.mode == 11:
			distr = message.text
			if distr == '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π' or distr == '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π' or distr == '–ï—Å–∏–ª—å—Å–∫–∏–π' or distr == '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π':
				u.seeker.distr = message.text
				u.mode += 1
				if u.seeker.hata == True:
					u.mode += 2
					keyboard = types.ReplyKeyboardMarkup(True, True)
					keyboard.row('–¥–æ 20.000 —Ç–µ–Ω–≥–µ', '–æ—Ç 20.000 –¥–æ 30.000 —Ç–µ–Ω–≥–µ')
					keyboard.row('–æ—Ç 30.000 –¥–æ 40.000 —Ç–µ–Ω–≥–µ', '–æ—Ç 40.000 –¥–æ 50.000 —Ç–µ–Ω–≥–µ')
					keyboard.row('–≤—ã—à–µ 50.000 —Ç–µ–Ω–≥–µ', 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
					bot.send_message(message.chat.id, '–í–∞—É, —ç—Ç–æ–π –º–æ—é —Å–∞–º—ã–π –ª—é–±–∏–º—ã–π —Ä–∞–π–æ–Ω! –°–∫–æ–ª—å–∫–æ —Ç—ã —Ö–æ—á–µ—à—å –±—Ä–∞—Ç—å –∞—Ä–µ–Ω–¥–Ω—É—é –ø–ª–∞—Ç—É —Å –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞?', reply_markup=keyboard)
				else:	
					bot.send_message(message.chat.id, '–£—Ç–æ—á–Ω–∏ –≤–æ–∑–ª–µ –∫–∞–∫–æ–≥–æ –∑–¥–∞–Ω–∏—è —Ç–µ–±–µ –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∂–∏–ª—å–µ(–Ω–∞–∑–≤–∞–Ω–∏–µ \
					–º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω–∞, –º–∞–≥–∞–∑–∏–Ωüè™, –±–∏–∑–Ω–µ—Å-—Ü–µ–Ω—Ç—Äüè¢, –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —É–ª–∏—Ü, –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—åüèØ)')
			else:
				bot.send_message(message.chat.id, '–•—ç—ç–π. –í—ã–±–∏—Ä–∞–π —Å –∫–Ω–æ–ø–æ—á–∫–∞–º–∏. –Ø –ø–æ-–¥—Ä—É–≥–æ–º—É –Ω–µ –ø–æ–Ω–∏–º–∞—é :(')
		elif u.mode == 12:
			u.seeker.near_what = message.text
			u.mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('–¥–æ 20.000 —Ç–µ–Ω–≥–µ', '–æ—Ç 20.000 –¥–æ 30.000 —Ç–µ–Ω–≥–µ')
			keyboard.row('–æ—Ç 30.000 –¥–æ 40.000 —Ç–µ–Ω–≥–µ', '–æ—Ç 40.000 –¥–æ 50.000 —Ç–µ–Ω–≥–µ')
			keyboard.row('–≤—ã—à–µ 50.000 —Ç–µ–Ω–≥–µ', 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–∞', reply_markup=keyboard)
		elif u.mode == 13:
			u.seeker.price = message.text
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('–û—Ç–¥–µ–ª—å–Ω—É—é –∫–æ–º–Ω–∞—Ç—É', '–ú–æ–∂–Ω–æ —Å –∫–µ–º-–Ω–∏–±—É–¥—å –≤ –∫–æ–º–Ω–∞—Ç–µ')
			keyboard.row('–û–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞')
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–í—Å–µ, –æ—Å—Ç–∞–ª–æ—Å—å –µ—â–µ —Ç—Ä–∏ —à–∞–≥–∞... –ö–∞–∫ —Ç–µ–±–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ –∂–∏—Ç—å: —Å –∫–µ–º-—Ç–æ –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ?', reply_markup=keyboard)
			u.mode += 1
		elif u.mode == 14:
			if u.seeker.hata == True:
				u.seeker.price = message.text
			else:
				u.seeker.seeking_for = message.text
			u.mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å —è —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –ø–æ –±–æ–ª—å—à–µ –æ —Ç–≤–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Öüé§, —Ö–æ–±–±–∏üèÄ, —á—Ç–æ –ª—é–±–∏—à—å —á–∏—Ç–∞—Ç—åüéí, –∫–∞–∫–∏–µ —Ñ–∏–ª—å–º—ã —Å–º–æ—Ç—Ä–µ—Ç—åüé•. –õ—é–±–ª—é –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –ª–∏—á–Ω–æ—Å—Ç—è–º–∏üòä',reply_markup=keyboard)
		elif u.mode == 15:
			u.seeker.interest = message.text
			u.mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. P.S. –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —è —Ç–µ–±–µ –Ω–µ –±—É–¥—É –ø–∏—Å–∞—Ç—å:)\n(—Å–ª–µ–¥—É–π —ç—Ç–æ–º—É –ø—Ä–∏–º–µ—Ä—É: 8-—Ö—Ö—Ö-—Ö—Ö—Ö-—Ö—Ö-—Ö—Ö)', reply_markup=keyboard)
		elif u.mode == 16:
			num = message.text
			digits = 0
			correct = True
			for a in num:
				if a.isdigit():
					digits += 1
				elif a != '-':
					correct = False
			if digits != 11:
				correct = False
			if not correct:
				bot.send_message(message.chat.id, '–í–≤–æ–¥–∏ —Å–ª–µ–¥—É—è —ç—Ç–æ–º—É –ø—Ä–∏–º–µ—Ä—É: 8-—Ö—Ö—Ö-—Ö—Ö—Ö-—Ö—Ö-—Ö—Ö')
				return
			u.seeker.phone_num = message.text
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë —Å–µ–ª—Ñ–∏. –•–æ—á—É —É–≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤–∂–∏–≤—É—é. –¢–æ–ª—å–∫–æ –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è :–∑ ', reply_markup=keyboard)
			u.mode += 1
		elif u.mode == 17:
			bot.send_message(message.chat.id, '–ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é')
	elif u.search_profile == True:
		if u.mode == 1:
			distr = message.text
			if distr == '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π' or distr == '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π' or distr == '–ï—Å–∏–ª—å—Å–∫–∏–π' or distr == '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π':
				u.seeker.distr = message.text
				u.mode += 1
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('–¥–æ 20.000 —Ç–µ–Ω–≥–µ', '–æ—Ç 20.000 –¥–æ 30.000 —Ç–µ–Ω–≥–µ')
				keyboard.row('–æ—Ç 30.000 –¥–æ 40.000 —Ç–µ–Ω–≥–µ', '–æ—Ç 40.000 –¥–æ 50.000 —Ç–µ–Ω–≥–µ')
				keyboard.row('–≤—ã—à–µ 50.000 —Ç–µ–Ω–≥–µ', 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ –∂–µ–ª–∞–µ–º—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã.', reply_markup=keyboard)
			else:
				bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–±–∏—Ä–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ—á–µ–∫')
		elif u.mode == 2:
			u.seeker.price = message.text
			u.seeker.chat_id = message.chat.id
			u.seeker.hata = None
			u.profiles = db.get_profiles_by_filters(u.seeker)
			u.seeker = Seeker()
			u.search_profile = False
			u.mode = 0
			if u.profiles is None or u.cur_profile >= len(u.profiles) or u.cur_profile < 0:
				bot.send_message(message.chat.id, '–¢–∞–∫, –≤–∏–¥–Ω–æ —Ç—ã —É –Ω–∞—Å —Å–∞–º—ã–π –ø–µ—Ä–≤—ã–π! –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ, –ø–æ–∫–∞ –ø—Ä–∏–¥—É—Ç –µ—â–µ –ª—é–¥–∏. –° —Ç–∞–∫–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º –¥—É–º–∞—é –≤—Å–µ –∑–∞—Ö–æ—Ç—è—Ç –∂–∏—Ç—å)')
				return
			profile = u.profiles[u.cur_profile]
			u.cur_profile += 1
			keyboard = types.InlineKeyboardMarkup()
			if u.cur_profile + 1 <= len(u.profiles) and u.cur_profile > 1:
				button1 = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∏–π >>', callback_data = 'profile_next')
				button2 = types.InlineKeyboardButton('<< –ü—Ä–µ–¥—ã–¥—É—â–∏–π', callback_data = 'profile_prev')
				keyboard.row(button2, button1)
			elif u.cur_profile > 1:
				button = types.InlineKeyboardButton('<< –ü—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data = 'profile_prev')
				keyboard.add(button)
			elif u.cur_profile + 1 <= len(u.profiles):
				button = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å >>', callback_data = 'profile_next')
				keyboard.add(button)
			cap = profile_info(profile)
			photo_id = db.get_profile_photo(profile[0])
			if photo_id == '0':
				bot.send_message(message.chat.id, cap, reply_markup = keyboard, parse_mode = 'Markdown')
			else: 
				photo = photos.download_photo(photo_id)
				bot.send_photo(message.chat.id, photo, caption = cap, reply_markup = keyboard, parse_mode = 'Markdown')
	elif u.change_st > 0:
		if u.change_st == 1:
			name = message.text
			db.change_name(message.chat.id, name)
			bot.send_message(message.chat.id, '–¢–≤–æ–µ –ò–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!')
			profile = db.get_profile(message.chat.id)
			keyboard = types.InlineKeyboardMarkup()
			button1 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è', callback_data = 'change_name')
			button2 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –í–æ–∑—Ä–∞—Å—Ç', callback_data = 'change_age')
			button3 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å\n–û—Ç–∫—É–¥–∞ –†–æ–¥–æ–º', callback_data = 'change_homeland')
			button4 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –û —Å–µ–±–µ', callback_data = 'change_desc')
			button5 = types.InlineKeyboardButton('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='')
			keyboard.row(button1, button2)
			keyboard.row(button3, button4)
			keyboard.row(button5)
			cap = profile_info(profile)
			photo_id = db.get_profile_photo(profile[0])
			if photo_id == '0':
				bot.edit_message_text(chat_id = message.chat.id, message_id = u.last_mess_id, text = cap, reply_markup = keyboard, parse_mode = 'Markdown')
			else: 
				bot.edit_message_caption(chat_id = message.chat.id, message_id = u.last_mess_id, caption = cap, reply_markup = keyboard, parse_mode = 'Markdown')
			u.change_st = 0
		elif u.change_st == 2:
			age = message.text
			if not age.isdigit():
				bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!')
				return
			db.change_age(message.chat.id, age)
			bot.send_message(message.chat.id, '–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!')
			profile = db.get_profile(message.chat.id)
			keyboard = types.InlineKeyboardMarkup()
			button1 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è', callback_data = 'change_name')
			button2 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –í–æ–∑—Ä–∞—Å—Ç', callback_data = 'change_age')
			button3 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å \n–û—Ç–∫—É–¥–∞ –†–æ–¥–æ–º', callback_data = 'change_homeland')
			button4 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –û —Å–µ–±–µ', callback_data = 'change_desc')
			button5 = types.InlineKeyboardButton('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='')
			keyboard.row(button1, button2)
			keyboard.row(button3, button4)
			keyboard.row(button5)
			cap = profile_info(profile)
			photo_id = db.get_profile_photo(profile[0])
			if photo_id == '0':
				bot.edit_message_text(chat_id = message.chat.id, message_id = u.last_mess_id, text = cap, reply_markup = keyboard, parse_mode = 'Markdown')
			else: 
				bot.edit_message_caption(chat_id = message.chat.id, message_id = u.last_mess_id, caption = cap, reply_markup=keyboard, parse_mode = 'Markdown')
			u.change_st = 0
		elif u.change_st == 3:
			homeland = message.text
			db.change_homeland(message.chat.id, homeland)
			bot.send_message(message.chat.id, '–¢–≤–æ–µ –º–µ—Å—Ç–æ –æ—Ç–∫—É–¥–∞ —Ç—ã —Ä–æ–¥–æ–º —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!')
			profile = db.get_profile(message.chat.id)
			keyboard = types.InlineKeyboardMarkup()
			button1 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è', callback_data = 'change_name')
			button2 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –í–æ–∑—Ä–∞—Å—Ç', callback_data = 'change_age')
			button3 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å\n–û—Ç–∫—É–¥–∞ –†–æ–¥–æ–º', callback_data = 'change_homeland')
			button4 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –û —Å–µ–±–µ', callback_data = 'change_desc')
			button5 = types.InlineKeyboardButton('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='')
			keyboard.row(button1, button2)
			keyboard.row(button3, button4)
			keyboard.row(button5)
			cap = profile_info(profile)
			photo_id = db.get_profile_photo(profile[0])
			if photo_id == '0':
				bot.edit_message_text(chat_id = message.chat.id, message_id = u.last_mess_id, text = cap, reply_markup = keyboard, parse_mode = 'Markdown')
			else: 
				bot.edit_message_caption(chat_id = message.chat.id, message_id = u.last_mess_id, caption = cap, reply_markup=keyboard, parse_mode = 'Markdown')
			u.change_st = 0
		elif u.change_st == 4:
			desc = message.text
			db.change_desc(message.chat.id, desc)
			bot.send_message(message.chat.id, '–¢–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ —Å–µ–±–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!')
			profile = db.get_profile(message.chat.id)
			keyboard = types.InlineKeyboardMarkup()
			button1 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è', callback_data = 'change_name')
			button2 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –í–æ–∑—Ä–∞—Å—Ç', callback_data = 'change_age')
			button3 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å\n–û—Ç–∫—É–¥–∞ –†–æ–¥–æ–º', callback_data = 'change_homeland')
			button4 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –û —Å–µ–±–µ', callback_data = 'change_desc')
			button5 = types.InlineKeyboardButton('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='')
			keyboard.row(button1, button2)
			keyboard.row(button3, button4)
			keyboard.row(button5)
			cap = profile_info(profile)
			photo_id = db.get_profile_photo(profile[0])
			if photo_id == '0':
				bot.edit_message_text(chat_id = message.chat.id, message_id = u.last_mess_id, text = cap, reply_markup = keyboard, parse_mode = 'Markdown')
			else: 
				bot.edit_message_caption(chat_id = message.chat.id, message_id = u.last_mess_id, caption = cap, reply_markup=keyboard, parse_mode = 'Markdown')
			u.change_st = 0
	else:
		bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–ø–æ–ª–Ω–∏ –∫–æ–º–∞–Ω–¥—É /menu')

@bot.message_handler(content_types = ['photo'])
def upload_photo(message):
	global allvars
	add_new_user(message.chat.id)
	u = allvars[message.chat.id]
	if (u.seeker_st == True or u.seeker_search_st == True) and u.mode == 17:
		u.seeker.photo_id.append(photos.document_handler(message, bot))
		if message.from_user.username is not None:
			u.seeker.telegram_username = message.from_user.username
		db.seeker_insert(u.seeker)
		bot.send_message(message.chat.id, '–£—Ä–∞üéâ –ú—ã —Å —Ç–æ–±–æ–π —ç—Ç–æ —Å–¥–µ–ª–∞–ª–∏. –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞! –ï—Å–ª–∏ —è —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è, —Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –º–µ–Ω—è —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º. –Ø –æ—á–µ–Ω—å –ª—é–±–ª—é –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞üòä')
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		profile = db.get_profile(message.chat.id)
		cap = profile_info(profile)
		photo_id = db.get_profile_photo(profile[0])
		if photo_id == '0':
			bot.send_message(message.chat.id, cap, parse_mode = 'Markdown')
		else: 
			photo = photos.download_photo(photo_id)
			bot.send_photo(message.chat.id, photo, caption = cap, parse_mode = 'Markdown')
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_message(message.chat.id, '–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —Ç—ã –∑–∞—Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É, –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ —Ä–∞–∑–¥–µ–ª–µ \'–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è\' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é /menu \n –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ "–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫" –≤ —Ä–∞–∑–¥–µ–ª–µ /menu')
		time.sleep(2)
		if u.seeker_st == True:
			bot.send_message(message.chat.id, '*–ü–æ–¥–±–∏—Ä–∞—é —Ç–µ–±–µ –∂–∏–ª—å–µ —Å –∏–¥–µ–∞–ª—å–Ω—ã–º –¥–ª—è —Ç–µ–±—è —Å–æ—Å–µ–¥—è–º–∏...*', parse_mode = "Markdown")
			bot.send_chat_action(message.chat.id, 'typing')
			time.sleep(5)
			seeker_st = False
			flat_matches = db.get_matches(seeker)
			seeker = Seeker()
			keyboard = types.InlineKeyboardMarkup()
			button = types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å', callback_data = 'matches_out')
			keyboard.add(button)
			bot.send_message(message.chat.id, '–ö–≤–∞—Ä—Ç–∏—Ä—ã –Ω–∞–π–¥–µ–Ω—ã!', reply_markup = keyboard)
		elif u.seeker_search_st == True:
			bot.send_message(message.chat.id, '*–ü–æ–¥–±–∏—Ä–∞—é –¥–ª—è —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω—ã—Ö —Å–æ—Å–µ–¥–æ–≤ –ø–æ –∫–≤–∞—Ä—Ç–∏—Ä–µ...*', parse_mode = 'Markdown')
			bot.send_chat_action(message.chat.id, 'typing')
			time.sleep(5)
			u.seeker_search_st = False
			u.profiles = db.get_profiles_by_filters(u.seeker)
			u.seeker = Seeker()
			keyboard = types.InlineKeyboardMarkup()
			button = types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å', callback_data = 'profile_next')
			keyboard.add(button)
			bot.send_message(message.chat.id, '–õ—é–¥–∏ –Ω–∞–π–¥–µ–Ω—ã! –ù–∞–∂–º–∏ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–æ—á–∫—É', reply_markup = keyboard)
bot.polling(none_stop=True)
